type_text = "plotparticle";
name_text = "PQBAllRandom";
plots_dir = "J:/FPIBGJournalStaticV2/rpt";
tex_dir = "J:/FPIBGJournalStaticV2/rpt";
tex_image_dir = "";
data_dir = "J:/FPIBGDATAT";
caption_box = "Results of particle quantity benchmark";
caption_array =
[
    "Frames Performance at \\bestTime",
    "Time Performance"
];
mode = "performance";
compute_type = "average";
values_file_text = "J:/FPIBGJournalStaticV2/rpt/vals.tex";
hspace_text = "-.1";
row_cols_text = "1:3";
font_size = "10";
floating_bool_text = "true";
placement_text = "h";
title_text = "PQB Plots";
plot_width_text = "3.0";
data_start_text = "0";
data_end_text = "";
num_plots_text = "1";
DataFields1 =
[
    "fld.PQB:loadedp",
    "fld.PQB:gms",
    "fld.PQB:cms",
    "fld.PQB:cms+fld.PQB:gms",
    "fld.PQBRandom:gms",
    "fld.PQBRandom:cms"
];
plotFormat11 =
[
    "edgecolor=red",
    "linewidths=1",
    "marker=^",
    "facecolors=none",
    "s=4"
];
plotFormat12 =
[
    "edgecolor=green",
    "linewidths=1",
    "marker=^",
    "facecolors=none",
    "s=4"
];
plotFormat13 =
[
    "edgecolor=blue",
    "linewidths=1",
    "marker=^",
    "facecolors=none",
    "s=4"
];
plotFormat14 =
[
    "edgecolor=red",
    "linewidths=1",
    "marker=o",
    "facecolors=none"
];
plotFormat15 =
[
    "edgecolor=blue",
    "linewidths=1",
    "marker=o",
    "facecolors=none"
];
Trendline1 =
[
    "none",
    "none",
    "none",
    "none",
    "none"
];
Legend1 =
[
    "graphics sequental",
    "compute  sequental",
    "total  sequental",
    "graphics random",
    "compute  random"
];
PlotCommands1 =
[
    "plt.scatter",
    "plt.scatter",
    "plt.scatter",
    "plt.scatter",
    "plt.scatter"
];
LineSlice1 =
[
    "0:end"
];
PlotNames1 =
[
    "glinVnump",
    "clinVnump",
    "totlinVnumpglinVnumprand",
    "clinVnumprand"
];
DataFiles =
[
    "none",
    "none"
];
commands1 =
[
    "plt.grid('on')",
    "plt.ylabel('Time per frame (ms)')",
    "plt.xlabel('Number of particles (millions)')",
    "self.ax.xaxis.set_major_formatter(FuncFormatter(lambda x, pos: '{0:g}'.format(x/1E6)))",
    "self.ax.yaxis.set_major_formatter(FuncFormatter(lambda x, pos: '{0:.0f}'.format(x*1E3)))",
    "ax.xaxis.set_minor_formatter('%d')",
    "ax.yaxis.set_minor_formatter('%d')"
];
