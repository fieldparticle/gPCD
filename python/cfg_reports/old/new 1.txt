 "linewidths=1",
    "marker=^",
    "facecolors=none"
	
	def newDoc(self):
        if self.document() is not None:
            self.setPageMode(QPdfView.PageMode.SinglePage)
            self.setZoomMode(QPdfView.ZoomMode.Custom)
            self.show()

            page_width: float = self.document().pagePointSize(0).width()
            view_width = self.width()
            zoom_factor = view_width / page_width
            self.pageNavigator().jump(0, QPoint(), zoom_factor)
            self.setZoomFactor(zoom_factor)
        else:
            self.hide()
			
			'C:/_DJ/gPCDPaper/rpt/preview.pdf'
			
			
			variables = re.findall('\{(.*?)\}', ll)
                leg_str = f""
                # Escape delimiters if they might contain special regex characters
                escaped_start = re.escape('{')
                escaped_end = re.escape('}')
                # Construct the regex pattern
                pattern = f"{escaped_start}.*?{escaped_end}"

                # Use re.sub to remove the matched substring
                cleaned_text = re.sub(pattern, "", ll)
plot_format11 =
[
    "edgecolor=red",
	"alpha=0.7",
	"marker=o",
	"facecolors=none"
];
plot_format12 =
[
	"linestyle=dotted",
    "linewidth=3",
    "color=tab:green",
    "label=graphics"
];
plot_format13 =
[
	"linestyle=dotted",
    "linewidth=3",
    "color=tab:blue",
    "label=graphics"
];
plot_format14 =
[
	"linestyle=dotted",
    "linewidth=3",
    "color=tab:orange",
    "label=graphics"
];caption = "Results of PQBS with the overall frame-rate performance. The linear performance data is presented in green. The linear fit has a base cost of 8.5E-12 s while the quadrtaic fit   ";