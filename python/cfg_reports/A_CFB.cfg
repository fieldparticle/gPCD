type = "plot_code";
name = "A_CFB";
plots_dir = "C:/_DJ/gPCDPaper/inc";
tex_dir = "C:/_DJ/gPCDPaper/inc";
tex_image_dir = "";
input_data_dir_help = "This is the test and bin files directory";
input_data_file = "C:/_DJ/gPCDData/perfDataCFBT/perfdataPerformanceSummary.csv";
caption_file = "C:\_DJ\gPCD\python\cfg_reports\A_CFB.cap"
mmrr_dir = "C:\_DJ\gPCDData\perfDataMMRR";
sub_caption_array =[];
mode_help = "V for verify (D), T for performce with device timers, P for overall performance (debug off, internal timers off)";
mode = "V";
compute_type_help = "max for build a summary file with max values, avg to build it with averages."
compute_type = "min";
mmrr_dir = "C:\_DJ\gPCDData\perfDataMMRR";
latex_data_base = "C:/_DJ/gPCDPaper/inc/LatexValsDataBase.tex"
hspace = "-.1";
font_size = 10;
floating = "true";
placement = "ht";
title = "PQB Plot";
plot_width = 3.0;
data_start = 0;
data_end_text = "";
centering = true;
num_plots = 2;
include = [ ];
dpi = 600;
//##################################################################################
plot_scale = [0.50];
data_fields =
[
    "fld.expectedc",
	"fld.gms",
	"fld.cms",
	"fld.gms",
	"fld.cms"
	
];
data_type = 
[
	"xdata",
	"ydata",
	"ydata",
	"linear_trend",
	"linear_trend"

];
plot_switch = 
[
	"true",
	"true",
	"true",
	"true",
	"true"
	

];
data_source_help = "This is the directory where the results files reside";
data_source = 
[
	"CFBT",
	"CFBT",
	"CFBT",
	"CFBT",
	"CFBT"
	

]
plot_legend =
[
	"Compute",
	"Graphics",
	"Compute Trend",
	"Graphics Trens"
	
];

plot_format1 =
[
	"marker=s",
	"ms=4",
	"linestyle=none",
    "linewidth=1",
    "color=tab:red",
    "label=graphics",
	"fillstyle=none"
];
plot_format2 =
[
	"marker=o",
	"ms=4",
	"linestyle=none",
    "linewidth=1",
    "color=b",
	"fillstyle=none"
	
];
plot_format3 =
[
	"marker=x",
    "linewidth=1",
	"linestyle=dotted",
    "color=black",
    "fillstyle=none"
];
plot_format4 =
[

	"linestyle=dotted",
    "linewidth=3",
    "color=tab:green"
    
    
];
plot_commands =
[
    "plt.grid('on')",
    "plt.ylabel('Frame Time, t (ms)')",
    "plt.xlabel('Number of collisions, n (millions)')",
    "ax.xaxis.set_major_formatter(FuncFormatter(lambda x, pos: '{0:g}'.format(x)))",
	"ax.yaxis.set_major_formatter(FuncFormatter(lambda x, pos: '{0:g}'.format(x*1E3)))",
    "ax.xaxis.set_minor_formatter('%d')",
    "ax.yaxis.set_minor_formatter('%d')",
	"fig.set_figwidth(10)",
    "fig.set_figheight(8)"
	"plt.rc('axes', labelsize=22)",
	"plt.rc('xtick', labelsize=15)",
	"plt.rc('ytick', labelsize=15)",
	"plt.rc('legend', fontsize=15)",
	"plt.grid(True, which='both', ls='--', alpha=0.6)"
];

line_commands =
[
    "plt.plot",
	"plt.plot",
	"plt.plot",
	"plt.plot",
	
	
	
	
];
line_slices = [ "0:end",
				"0:end",
				"0:end",
				"0:end"
				
				] ;
save_vals =
[
    "loadedp=0"
	
];
